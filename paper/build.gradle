dependencies {
    // From Common
    implementation project(":common")
    slim "dev.morphia.morphia:morphia-core"
    slim "org.kohsuke:github-api"
    slim "eu.okaeri:okaeri-hjson"

    // From Paper
    slim "net.kyori:adventure-text-minimessage"
    slim "io.github.bananapuncher714:NBTEditor"
    slim "net.wesjd:anvilgui"
    slim "com.github.cryptomorin:XSeries"
    slim "cloud.commandframework:cloud-paper"
    slim "me.lucko:commodore"
    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"
    compileOnly "org.spigotmc:spigot:1.16.5-R0.1-SNAPSHOT"
    compileOnly "me.clip:placeholderapi"
    compileOnly "net.luckperms:api"
    compileOnly "com.sk89q.worldguard:worldguard-bukkit"
    compileOnly "com.sk89q.worldedit:worldedit-bukkit"
    compileOnly "com.github.MilkBowl:VaultAPI"
    compileOnly "net.pl3x.map:pl3xmap-api"
    compileOnly "net.citizensnpcs:citizens-main"
    compileOnly "com.SirBlobman.combatlogx:CombatLogX-API"
    compileOnly "com.gmail.filoghost.holographicdisplays:holographicdisplays-api"
    compileOnly "de.tr7zw:item-nbt-api-plugin"
    compileOnly "world.bentobox:bentobox:1.17.1-SNAPSHOT"
    compileOnly "world.bentobox:level:2.7.0-SNAPSHOT"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        expand "pluginVersion": project.version
        include "plugin.yml"
    }
}

shadowJar {
    archiveClassifier.set("")
    archiveVersion.set("${project.version}")
    archiveBaseName.set("InfumiaLibraryPlugin")
    setDestinationDir(new File("C:\\Users\\hasan\\Downloads\\server\\plugins"))
}
